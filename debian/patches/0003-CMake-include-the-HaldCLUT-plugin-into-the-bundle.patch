From: Ichthyostega <prg@ichthyostega.de>
Date: Fri, 31 Jan 2020 18:06:34 +0100
Subject: CMake: include the HaldCLUT plugin into the bundle

Note: building on Linux/Debian encountered some problems with the dependencies
picked up by CMake when using the Debian package libcurl4-gnutls-dev; we got
several link flags for (TLS, SSL) libraries which are already transitive
dependencies of the libcurl-gnutls. To work around these, without having
to build-depend on a ton of further SSL related packages, we include the
library as always linked dynamically (by using ${CURL_LDFLAGS} without
the _STATIC_ infix)

Generally speaking, it would be an extremely bad idea to link libcurl
statically (think of vulnerabilities). However, on Debian, dynamic linking
is generally preferred and CMake links results from pkg-config dynamic by default.
---
 CMakeLists.txt | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1506365..e7c47cf 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -57,6 +57,7 @@ pkg_search_module(CAIRO REQUIRED cairo)
 pkg_search_module(POPPLER REQUIRED poppler-glib)
 pkg_check_modules(REVENGE REQUIRED librevenge-0.0 librevenge-generators-0.0 librevenge-stream-0.0)
 pkg_search_module(CDR REQUIRED libcdr-0.1)
+pkg_search_module(CURL REQUIRED libcurl)
 add_compile_options(${MAGICK_STATIC_CFLAGS}) # we need the magick flags
 
 if(${OLD_POPPLER})
@@ -168,6 +169,7 @@ FILE(GLOB SOURCES
     "Magick/Swirl/Swirl.cpp"
     "Magick/Wave/Wave.cpp"
     "Magick/Morphology/Morphology.cpp"
+    "Magick/HaldCLUT/HaldCLUT.cpp"
     "Magick/MagickPlugin.cpp"
     "lodepng/lodepng.cpp"
 )
@@ -189,6 +191,9 @@ FILE(GLOB RESOURCES
     "Magick/Wave/net.fxarena.openfx.*.svg"
     "Magick/Morphology/net.fxarena.openfx.*.png"
     "Magick/Morphology/net.fxarena.openfx.*.svg"
+    "Magick/HaldCLUT/net.fxarena.openfx.HaldCLUT.png"
+    "Magick/HaldCLUT/net.fxarena.openfx.HaldCLUT.svg"
+    "Magick/HaldCLUT/net.fxarena.openfx.HaldCLUT.xml"
     "Magick/Extra.png"
     "Magick/Extra.svg"
 )
@@ -266,6 +271,7 @@ include_directories(
     ${POPPLER_INCLUDE_DIRS}
     ${REVENGE_INCLUDE_DIRS}
     ${CDR_INCLUDE_DIRS}
+    ${CURL_INCLUDE_DIRS}
 )
 target_link_libraries(
     ${PROJECT_NAME}
@@ -283,6 +289,7 @@ target_link_libraries(
     ${POPPLER_STATIC_LDFLAGS}
     ${REVENGE_STATIC_LDFLAGS}
     ${CDR_STATIC_LDFLAGS}
+    ${CURL_LDFLAGS}
 )
 
 if(${AUDIO})
